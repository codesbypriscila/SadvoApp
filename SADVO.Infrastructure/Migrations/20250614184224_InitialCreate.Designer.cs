// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SADVO.Infrastructure.AppDbContext;

#nullable disable

namespace SADVO.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250614184224_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SADVO.Domain.Entities.Administrador.AsignacionDirigente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PartidoPoliticoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PartidoPoliticoId");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("AsignacionesDirigente");
                });

            modelBuilder.Entity("SADVO.Domain.Entities.Administrador.Ciudadano", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Cedula")
                        .IsUnique();

                    b.ToTable("Ciudadanos");
                });

            modelBuilder.Entity("SADVO.Domain.Entities.Administrador.Eleccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activa")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Finalizada")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Elecciones");
                });

            modelBuilder.Entity("SADVO.Domain.Entities.Administrador.PartidoPolitico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Siglas")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Siglas")
                        .IsUnique();

                    b.ToTable("PartidosPoliticos");
                });

            modelBuilder.Entity("SADVO.Domain.Entities.Administrador.PuestoElectivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PuestosElectivos");
                });

            modelBuilder.Entity("SADVO.Domain.Entities.Administrador.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Apellido = "Perez",
                            Email = "priscilaperezherrera@gmail.com",
                            Nombre = "Priscila",
                            PasswordHash = "03AC674216F3E15C761EE1A5E255F067953623C8B388B4459E13F978D7C846F4",
                            RolId = 1,
                            Username = "Priscila"
                        });
                });

            modelBuilder.Entity("SADVO.Domain.Entities.Dirigente.AlianzaPolitica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaRespuesta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<int>("PartidoReceptorId")
                        .HasColumnType("int");

                    b.Property<int>("PartidoSolicitanteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PartidoReceptorId");

                    b.HasIndex("PartidoSolicitanteId");

                    b.ToTable("AlianzasPoliticas");
                });

            modelBuilder.Entity("SADVO.Domain.Entities.Dirigente.Candidato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartidoPoliticoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PartidoPoliticoId");

                    b.ToTable("Candidatos");
                });

            modelBuilder.Entity("SADVO.Domain.Entities.Dirigente.CandidatoPuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CandidatoId")
                        .HasColumnType("int");

                    b.Property<int?>("EleccionId")
                        .HasColumnType("int");

                    b.Property<int>("PartidoPoliticoId")
                        .HasColumnType("int");

                    b.Property<int>("PuestoElectivoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId");

                    b.HasIndex("EleccionId");

                    b.HasIndex("PartidoPoliticoId");

                    b.HasIndex("PuestoElectivoId");

                    b.ToTable("CandidatosPuesto");
                });

            modelBuilder.Entity("SADVO.Domain.Entities.Elector.Voto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CandidatoId")
                        .HasColumnType("int");

                    b.Property<int>("CiudadanoId")
                        .HasColumnType("int");

                    b.Property<int>("EleccionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaVoto")
                        .HasColumnType("datetime2");

                    b.Property<int>("PuestoElectivoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId");

                    b.HasIndex("CiudadanoId");

                    b.HasIndex("EleccionId");

                    b.HasIndex("PuestoElectivoId");

                    b.ToTable("Votos");
                });

            modelBuilder.Entity("SADVO.Domain.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Administrador"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Dirigente"
                        });
                });

            modelBuilder.Entity("SADVO.Domain.Entities.Administrador.AsignacionDirigente", b =>
                {
                    b.HasOne("SADVO.Domain.Entities.Administrador.PartidoPolitico", "PartidoPolitico")
                        .WithMany("Dirigentes")
                        .HasForeignKey("PartidoPoliticoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SADVO.Domain.Entities.Administrador.Usuario", "Usuario")
                        .WithOne("AsignacionDirigente")
                        .HasForeignKey("SADVO.Domain.Entities.Administrador.AsignacionDirigente", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PartidoPolitico");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SADVO.Domain.Entities.Administrador.Usuario", b =>
                {
                    b.HasOne("SADVO.Domain.Entities.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("SADVO.Domain.Entities.Dirigente.AlianzaPolitica", b =>
                {
                    b.HasOne("SADVO.Domain.Entities.Administrador.PartidoPolitico", "PartidoReceptor")
                        .WithMany()
                        .HasForeignKey("PartidoReceptorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SADVO.Domain.Entities.Administrador.PartidoPolitico", "PartidoSolicitante")
                        .WithMany()
                        .HasForeignKey("PartidoSolicitanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PartidoReceptor");

                    b.Navigation("PartidoSolicitante");
                });

            modelBuilder.Entity("SADVO.Domain.Entities.Dirigente.Candidato", b =>
                {
                    b.HasOne("SADVO.Domain.Entities.Administrador.PartidoPolitico", "PartidoPolitico")
                        .WithMany("Candidatos")
                        .HasForeignKey("PartidoPoliticoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PartidoPolitico");
                });

            modelBuilder.Entity("SADVO.Domain.Entities.Dirigente.CandidatoPuesto", b =>
                {
                    b.HasOne("SADVO.Domain.Entities.Dirigente.Candidato", "Candidato")
                        .WithMany("Puestos")
                        .HasForeignKey("CandidatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SADVO.Domain.Entities.Administrador.Eleccion", "Eleccion")
                        .WithMany("Candidatos")
                        .HasForeignKey("EleccionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("SADVO.Domain.Entities.Administrador.PartidoPolitico", "PartidoPolitico")
                        .WithMany()
                        .HasForeignKey("PartidoPoliticoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SADVO.Domain.Entities.Administrador.PuestoElectivo", "PuestoElectivo")
                        .WithMany("Candidatos")
                        .HasForeignKey("PuestoElectivoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Candidato");

                    b.Navigation("Eleccion");

                    b.Navigation("PartidoPolitico");

                    b.Navigation("PuestoElectivo");
                });

            modelBuilder.Entity("SADVO.Domain.Entities.Elector.Voto", b =>
                {
                    b.HasOne("SADVO.Domain.Entities.Dirigente.Candidato", "Candidato")
                        .WithMany("Votos")
                        .HasForeignKey("CandidatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SADVO.Domain.Entities.Administrador.Ciudadano", "Ciudadano")
                        .WithMany("Votos")
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SADVO.Domain.Entities.Administrador.Eleccion", "Eleccion")
                        .WithMany("Votos")
                        .HasForeignKey("EleccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SADVO.Domain.Entities.Administrador.PuestoElectivo", "PuestoElectivo")
                        .WithMany()
                        .HasForeignKey("PuestoElectivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidato");

                    b.Navigation("Ciudadano");

                    b.Navigation("Eleccion");

                    b.Navigation("PuestoElectivo");
                });

            modelBuilder.Entity("SADVO.Domain.Entities.Administrador.Ciudadano", b =>
                {
                    b.Navigation("Votos");
                });

            modelBuilder.Entity("SADVO.Domain.Entities.Administrador.Eleccion", b =>
                {
                    b.Navigation("Candidatos");

                    b.Navigation("Votos");
                });

            modelBuilder.Entity("SADVO.Domain.Entities.Administrador.PartidoPolitico", b =>
                {
                    b.Navigation("Candidatos");

                    b.Navigation("Dirigentes");
                });

            modelBuilder.Entity("SADVO.Domain.Entities.Administrador.PuestoElectivo", b =>
                {
                    b.Navigation("Candidatos");
                });

            modelBuilder.Entity("SADVO.Domain.Entities.Administrador.Usuario", b =>
                {
                    b.Navigation("AsignacionDirigente");
                });

            modelBuilder.Entity("SADVO.Domain.Entities.Dirigente.Candidato", b =>
                {
                    b.Navigation("Puestos");

                    b.Navigation("Votos");
                });

            modelBuilder.Entity("SADVO.Domain.Entities.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
